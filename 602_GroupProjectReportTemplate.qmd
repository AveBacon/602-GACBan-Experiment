---
title: "How Credibility of Information About Gender Affirming Care Impacts Support for Legislation"
subtitle: "DACSS 602 (Fall 2024)"
author: Maura Anish, Kendrick Backmon, Avery Bacon, and Jules Tucher 
format: 
  html:
    toc: true
    toc-depth: 2
    toc-title: Contents
    toc-location: left
    html-math-method: katex
    theme: flatly
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    citations-hover: true
    footnotes-hover: true
    font-size: 80%
---

<!--
ATTENTION: Please submit both your .qmd file and the corresponding ".html" file after rendering.
-->


<!--
Replace the placeholders (title and author) in the yaml above with your own.
-->


# Introduction
<!--
What is your experiment about (4-5 sentences).
-->

# Methodology

<!--
Describe your experiment design, including: (1) experiment design, (2) treatments, (3) outcome variable(s), (4) sample size, and (5) data cleaning procedures (if applicable) [8-10 sentences]
-->
In order to answer our research question, we designed a 2x2 factorial between-subjects experiment with 4 treatment groups. We tested two nominal independent variables: credibility of information and inclusion of a statistic supporting the information. Credibility of information is provided by including a citation by well-known and credible source, in this case the Mayo Clinic. The statistic included to support the claim that puberty blockers can reduce risk of suicidality was "in some cases by over 70%". The four treatment graphics, including the full text of the infographic, are provided in Figure 1.

The experiment's outcome variable is the degree of support for legislation banning gender-affirming care for minors. This was measured using a 5-point Likert type scale: Strongly Oppose (1), Slightly Oppose (2), Neutral (3), Slightly Approve (4), and Strongly Approve (5). 

To complete the experimental design, respondents first completed an informed consent form and were asked several demographic questions. Third variables of particular interest to our research are age, gender, region, and political affiliation. Furthermore, survey respondents were asked a prior knowledge assessment to determine prior bias and understanding of the topic: "True or False: Puberty blockers are a safe and reversible treatment when prescribed by medical professionals to treat gender dysphoria in transgender minors."

A total of 220 survey responses were collected. 

# Data Cleaning
```{r}
# import tidyverse library
library(tidyverse)

# read in data emailed to us by Professor Song
g1_data <- read.csv("fa24_g1.csv")

# start with 220 rows and 17 columns 
dim(g1_data) 

# get rid of X column
g1_data <- select(g1_data, 2:17)

# rename some columns
g1_data <- g1_data |>
  rename(IV_stat = IV_info, gender_num = gender, hhi_num = hhi,
         ethnicity_num = ethnicity, hispanic_num = hispanic,
         education_num = education, political_party_num = political_party,
         region_num = region, gender_mfnb = g5sd1)

# change values of IV_stat
g1_data <- g1_data |>
  mutate(IV_org = as.factor(ifelse(IV_org == "no", "Non-credible", "Credible")),
         IV_stat = as.factor(ifelse(IV_stat == "no", "No statistic", "Statistic")),
         prior_knowledge = factor(g1q1, levels=c("True", "False")),
         DV_ban = factor(g1q2,
                          levels=c("Strongly oppose", "Slightly oppose", "Neutral", "Slightly support", "Strongly support"),
                          ordered=TRUE),
         manipulation_check = factor(g1q3,
                                     levels=c("Support", "Undecided", "Do not support"),
                                     ordered=TRUE))

# create gender_mf column
g1_data <- g1_data |>
  mutate(gender_mf = ifelse(gender_num==1, "Male", "Female"))

# create genders_equal column
g1_data <- g1_data |>
  mutate(genders_equal = ifelse(gender_mf == gender_mfnb, TRUE, FALSE))

# create hhi_txt column
g1_data <- g1_data |>
  mutate(hhi_txt = case_when(
    hhi_num == 1 ~ "Less than $14,999",
    hhi_num == 2 ~ "$15,000 to $19,999",
    hhi_num == 3 ~ "$20,000 to $24,999",
    hhi_num == 4 ~ "$25,000 to $29,999",
    hhi_num == 5 ~ "$30,000 to $34,999",
    hhi_num == 6 ~ "$35,000 to $39,999",
    hhi_num == 7 ~ "$40,000 to $44,999",
    hhi_num == 8 ~ "$45,000 to $49,999",
    hhi_num == 9 ~ "$50,000 to $54,999",
    hhi_num == 10 ~ "$55,000 to $59,999",
    hhi_num == 11 ~ "$60,000 to $64,999",
    hhi_num == 12 ~ "$65,000 to $69,999",
    hhi_num == 13 ~ "$70,000 to $74,999",
    hhi_num == 14 ~ "$75,000 to $79,999",
    hhi_num == 15 ~ "$80,000 to $84,999",
    hhi_num == 16 ~ "$85,000 to $89,999",
    hhi_num == 17 ~ "$90,000 to $94,999",
    hhi_num == 18 ~ "$95,000 to $99,999",
    hhi_num == 19 ~ "$100,000 to $124,999",
    hhi_num == 20 ~ "$125,000 to $149,999",
    hhi_num == 21 ~ "$150,000 to $174,999",
    hhi_num == 22 ~ "$175,000 to $199,999",
    hhi_num == 23 ~ "$200,000 to $249,999",
    hhi_num == 24 ~ "$250,000 and above"
  ) %>% as.factor())

# create ethnicity_txt and ethnicity_poc columns
g1_data <- g1_data |>
  mutate(ethnicity_txt = case_when(
    ethnicity_num == 1 ~ "White",
    ethnicity_num == 2 ~ "Black or African American",
    ethnicity_num == 3 ~ "American Indian or Alaska Native",
    ethnicity_num == 5 | ethnicity_num == 7 | ethnicity_num == 10 ~ "Asian",
    ethnicity_num == 15 ~ "Some other race",
    ethnicity_num == 16 ~ "Prefer not to answer",
  ))
g1_data <- g1_data |>
  mutate(ethnicity_poc = case_when(
    ethnicity_num == 1 ~ 0,
    ethnicity_num == 2 | ethnicity_num == 3 | ethnicity_num == 5 |
      ethnicity_num == 7 | ethnicity_num == 10 | ethnicity_num == 15 ~ 1,
    ethnicity_num == 16 ~ NA 
  ))

# create hispanic_txt and hispanic_yes columns
g1_data <- g1_data |>
  mutate(hispanic_txt = case_when(
    hispanic_num == 1 ~ "No, not of Hispanic, Latino, or Spanish origin",
    hispanic_num == 2 ~ "Yes, Mexican, Mexican American, Chicano",
    hispanic_num == 3 ~ "Yes, Cuban",
    hispanic_num == 4 ~ "Yes, Argentinian",
    hispanic_num == 5 ~ "Yes, Colombian",
    hispanic_num == 9 ~ "Yes, Nicaraguan",
    hispanic_num == 10 ~ "Yes, Panamanian",
    hispanic_num == 12 ~ "Yes, Spanish",
    hispanic_num == 14 ~ "Yes, Other Country",
    hispanic_num == 16 ~ "Prefer not to answer",
  ))
g1_data <- g1_data |>
  mutate(hispanic_yes = case_when(
    hispanic_num == 1 ~ 0,
    hispanic_num == 2 | hispanic_num == 3 | hispanic_num == 4 |
      hispanic_num == 5 | hispanic_num == 9 | hispanic_num == 10 |
      hispanic_num == 12 | hispanic_num == 14 ~ 1,
    hispanic_num == 16 ~ NA 
  ))

# create education_txt column
g1_data <- g1_data |>
  mutate(education_txt = case_when(
    education_num == 1 ~ "Some high school or less",
    education_num == 2 ~ "High school graduate",
    education_num == 3 ~ "Other post high school vocational training",
    education_num == 4 ~ "Completed some college, but no degree",
    education_num == 5 ~ "Associate's degree",
    education_num == 6 ~ "Bachelor's degree",
    education_num == 7 ~ "Master's or professional degree",
    education_num == 8 ~ "Doctorate degree",
    education_num == -3105 ~ "None of the above",
  ) %>% as.factor())

# create political_party_txt and political_party_dri columns
g1_data <- g1_data |>
  mutate(political_party_txt = case_when(
    political_party_num == 1 ~ "Strong Democrat",
    political_party_num == 2 ~ "Not very strong Democrat",
    political_party_num == 3 ~ "Independent Democrat",
    political_party_num == 4 ~ "Independent - neither",
    political_party_num == 5 ~ "Independent Republican",
    political_party_num == 6 ~ "Other - leaning Democrat",
    political_party_num == 7 ~ "Other - neither",
    political_party_num == 8 ~ "Other - leaning Republican",
  ) %>% as.factor())
g1_data <- g1_data |>
  mutate(political_party_dri = case_when(
    political_party_num == 1 | political_party_num == 2 |
      political_party_num == 3 | political_party_num == 6 ~ "Democrat",
    political_party_num == 5 | political_party_num == 8 ~ "Republican",
    political_party_num == 4 | political_party_num == 7 ~ "Independent"
  ) %>% as.factor)

# create region_txt column
g1_data <- g1_data |>
  mutate(region_txt = case_when(
    region_num == 1 ~ "Northeast",
    region_num == 2 ~ "Midwest",
    region_num == 3 ~ "South",
    region_num == 4 ~ "West",
  ) %>% as.factor())

# create age categorical
g1_data <- g1_data %>%
  mutate(age_cat = case_when(
    age < 36 ~ "18-35",
    age < 50 ~ "36-49",
    age < 64 ~ "50-63",
    TRUE ~ "64+"
  ) %>% as.factor())

# modify zip column to replace leading 0s
g1_data <- g1_data |>
  mutate(zip = ifelse(zip < 10000, as.character(str_c('0',zip)), as.character(zip))) 

# move columns so similar columns are near each other
g1_data <- g1_data |>
  relocate(gender_mf, .after=gender_num) |>
  relocate(gender_mfnb, .after=gender_mf) |>
  relocate(genders_equal, .after=gender_mfnb) |>
  relocate(hhi_txt, .after=hhi_num) |>
  relocate(ethnicity_txt, .after=ethnicity_num) |>
  relocate(ethnicity_poc, .after=ethnicity_txt) |>
  relocate(hispanic_txt, .after=hispanic_num) |>
  relocate(hispanic_yes, .after=hispanic_txt) |>
  relocate(education_txt, .after=education_num) |>
  relocate(political_party_txt, .after=political_party_num) |>
  relocate(political_party_dri, .after=political_party_txt) |>
  relocate(region_txt, .after=region_num)

# end with 220 rows and 27 columns
dim(g1_data)
```

# Analysis

We could use either factorial ANOVA or Ordered Logistic Regression to explore the results of our survey. Because the outcome variable is a Likert-type ordinal variable and not continuous, it does not meet the continuity assumption for factorial ANOVA. Also, Ordered Logistic Regression would allow for us to control for age, gender, region, and political affiliation.

<!--
Which statistical test is used, and why? [3-4 sentences]
-->
We could use either factorial ANOVA to explore the results of our survey. Because the outcome variable is a Likert-type ordinal variable and not continuous, it does not meet the continuity assumption for factorial ANOVA. Regardless of the model selected, we will also control for age, gender, region, and political affiliation.

<!--
Run the chosen test! To do so: (1) import the libraries you need, (2) import your data, (3) double-check the names of your IV(s) and DV, and (4) run the test. For information on the libraries and R syntax, refer to see Lecture 10.
-->

```{r}
# import libraries
library(ggplot2)

summary(g1_data)

# recreate expected results plot
summary_table <- g1_data %>%
  mutate(treatment = paste0(IV_org, ",\n", IV_stat)) %>%
  select(treatment, DV_ban, prior_knowledge) %>%
  group_by(treatment, DV_ban, prior_knowledge) %>%
  summarize(value = n())
ggplot(summary_table, aes(fill=DV_ban, y=value, x=treatment)) + 
    geom_bar(position="fill", stat="identity")  +
    facet_wrap(~ prior_knowledge) + 
    labs(x = "Exposure", y = "Proportion of Sample") + 
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45))


    scale_fill_manual(values = c("#881c1c", "#ffc72c", "#212721"),
                     name = "Orientation to\nLegislation",
                     labels = c("Against", "Neutral", "Support"))

## two-way ANOVA
    
# prepare data for analysis
anova_data <- g1_data %>%
  select(starts_with("IV"), DV_ban, gender_mfnb, political_party_dri, age_cat, region_txt, manipulation_check, prior_knowledge) %>%
  mutate(DV_ban_num = as.numeric(DV_ban),
         manipulation_check_num = as.numeric(manipulation_check),
         gender_mfnb = as.factor(gender_mfnb),
         DV_ban_3 = case_when(
           DV_ban_num < 3 ~ "Oppose",
           DV_ban_num == 3 ~ "Neutral",
           DV_ban_num > 3 ~ "Support"
         ) %>% factor(levels = c("Oppose", "Neutral", "Support"),
                      ordered=TRUE),
         DV_ban_3_num = as.numeric(DV_ban_3))

# explore consistency with manipulation check, throw out any inconsistent results -- test for cronbach's alpha?
table(anova_data$manipulation_check, anova_data$DV_ban)
table(anova_data$manipulation_check, anova_data$DV_ban_3)
ltm::cronbach.alpha(anova_data %>% select(manipulation_check, DV_ban_3), CI=T, standardized=T)

# confirm numeric structure of the data
str(anova_data)

# plot 2 DVs and outcome
library("ggpubr")
ggboxplot(anova_data, x = "IV_org", y = "DV_ban_num", color = "IV_stat",
          palette = c("#00AFBB", "#E7B800"))
ggboxplot(anova_data, x = "gender_mfnb", y = "DV_ban_num",
          palette = c("#00AFBB", "#E7B800"))
table(g1_data$gender_mfnb, g1_data$DV_ban)

# Two-way ANOVA with interaction

# 5-category outcome (numeric)
aov_results <- aov(DV_ban_num ~ IV_org * IV_stat + gender_mfnb + region_txt + age_cat + manipulation_check + prior_knowledge, data = anova_data)
summary(aov_results)

# manipulation check as outcome
aov_results <- aov(manipulation_check_num ~ IV_org * IV_stat + gender_mfnb + age_cat + region_txt + prior_knowledge, data = anova_data)
summary(aov_results)

interaction.plot(x.factor = anova_data$IV_org, trace.factor = anova_data$IV_stat, 
                 # x.factor: the factor to be plotted on x axis
                 # trace.factor: the factor to be plotted as lines
                 # response: a numeric variable giving the response
                 response = anova_data$DV_ban_num, fun = mean,
                 # type: the type of plot (p: point, l: line, b: both point and line)
                 type = "b", legend = TRUE,
                 xlab = "Source Credibility", ylab = "Support for Legislation",
                 pch = c(1, 19), col = c("#00AFBB", "#E7B800"), ylim =c(1,5), labs(color=""))
```




# Results
<!--
Report and interpret the test results. For information on what should be included, refer to lecture 10. Also add at least one plot.
-->




# Findings
<!--
Findings: Report the statistic you obtained along with the information to decide whether the null hypothesis can be rejected or not. Use a plot and/or table with a proper label.
-->



# Discussion
<!--
What are the implications of the study? What are possible explanations if the results do not align with your hypothesis? Any suggestions for future studies?
-->



### For your information
<!--
Some example code for different plots. Below is only for your information. Submit your report after removing this section.
-->

```{r}
# the built-in R data set named ToothGrowth:
# data from a study evaluating the effect of Vitamin C on tooth growth in Guinea pigs.
# The experiment has been performed on 60 pigs, where each animal received one of three dose levels of vitamin C (0.5, 1, and 2 mg/day) by one of two delivery methods, orange juice or ascorbic acid (a form of vitamin C and coded as VC). Tooth length was measured and a sample of the data is shown below
my_data = ToothGrowth
str(my_data)

# Convert dose as a factor and recode the levels
# as D0.5, D1, D2
my_data$dose <- factor(my_data$dose,
                       levels = c(0.5, 1, 2),
                       labels = c("D0.5", "D1", "D2"))
head(my_data)

# frequency table:
table(my_data$supp, my_data$dose)
```


```{r}
# Line plots with multiple groups
# plot tooth length ("len") by groups ("dose")
# color box plot by a second group: "supp"
# add error bars: mean_se
library(ggpubr)
ggline(my_data, x = "dose", y = "len", color = "supp",
       add = c("mean_se", "dotplot"),
       palette = c("#00AFBB", "#E7B800"))

# OR
# using R base graphs:
boxplot(len ~ supp * dose, data = my_data, frame = FALSE,
        col = c("#00AFBB", "#E7B800"), ylab = "Tooth Length")

# Another example: Two-way interaction plot


interaction.plot(x.factor = anova_data$IV_org, trace.factor = anova_data$IV_stat, 
                 # x.factor: the factor to be plotted on x axis
                 # trace.factor: the factor to be plotted as lines
                 # response: a numeric variable giving the response
                 response = anova_data$manipulation_check_num, fun = mean,
                 # type: the type of plot (p: point, l: line, b: both point and line)
                 type = "b", legend = TRUE,
                 xlab = "Source Credibility", ylab = "Opposition to Treatment",
                 pch = c(1, 19), col = c("#00AFBB", "#E7B800"), ylim =c(1,3), labs(color=""))
```

